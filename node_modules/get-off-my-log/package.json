{
  "_args": [
    [
      "get-off-my-log@0.1.x",
      "/Users/mickey/Desktop/nerdwallet-velocity/node_modules/webpagetest-mapper"
    ]
  ],
  "_from": "get-off-my-log@>=0.1.0 <0.2.0",
  "_id": "get-off-my-log@0.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/get-off-my-log",
  "_npmUser": {
    "email": "pmbooth@gmail.com",
    "name": "philbooth"
  },
  "_npmVersion": "1.3.11",
  "_phantomChildren": {},
  "_requested": {
    "name": "get-off-my-log",
    "raw": "get-off-my-log@0.1.x",
    "rawSpec": "0.1.x",
    "scope": null,
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/webpagetest-mapper"
  ],
  "_resolved": "https://registry.npmjs.org/get-off-my-log/-/get-off-my-log-0.1.0.tgz",
  "_shasum": "7a01abc8acaaff7b714d20265c77923194cfd58a",
  "_shrinkwrap": null,
  "_spec": "get-off-my-log@0.1.x",
  "_where": "/Users/mickey/Desktop/nerdwallet-velocity/node_modules/webpagetest-mapper",
  "author": {
    "email": "pmbooth@gmail.com",
    "name": "Phil Booth",
    "url": "https://github.com/philbooth"
  },
  "bugs": {
    "url": "https://github.com/philbooth/get-off-my-log/issues"
  },
  "contributors": [
    {
      "email": "pmbooth@gmail.com",
      "name": "Phil Booth",
      "url": "https://github.com/philbooth"
    }
  ],
  "dependencies": {},
  "description": "My JavaScript logging library for node and browser. Probably lamer than the other log libraries, but this one is mine so nerr.",
  "devDependencies": {
    "chai": "1.8.x",
    "jshint": "2.3.x",
    "mocha": "1.15.x",
    "uglify-js": "2.4.x"
  },
  "directories": {},
  "dist": {
    "shasum": "7a01abc8acaaff7b714d20265c77923194cfd58a",
    "tarball": "https://registry.npmjs.org/get-off-my-log/-/get-off-my-log-0.1.0.tgz"
  },
  "homepage": "https://github.com/philbooth/get-off-my-log",
  "keywords": [
    "log",
    "logger",
    "logging"
  ],
  "license": "MIT",
  "main": "./src",
  "maintainers": [
    {
      "email": "pmbooth@gmail.com",
      "name": "philbooth"
    }
  ],
  "name": "get-off-my-log",
  "optionalDependencies": {},
  "readme": "# Get off my log!\n\n[![Build status][ci-image]][ci-status]\n\nMy JavaScript logging library\nfor node and browser.\nProbably lamer\nthan the other log libraries,\nbut this one is mine\nso nerr.\n\n* [Does the world really need another logging library?](#does-the-world-really-need-another-logging-library)\n* [Should I use this library instead of something else?](#should-i-use-this-library-instead-of-something-else)\n* [What does this library offer?](#what-does-this-library-offer)\n* [What size is it?](#what-size-is-it)\n* [How do I install it?](#how-do-i-install-it)\n* [How do I use it?](#how-do-i-use-it)\n    * [Loading the library](#loading-the-library)\n    * [Calling the exported functions](#calling-the-exported-functions)\n    * [Examples](#examples)\n* [How do I set up the build environment?](#how-do-i-set-up-the-build-environment)\n* [What license is it released under?](#what-license-is-it-released-under)\n\n## Does the world really need another logging library?\n\nAbsolutely, definitely, resoundingly no,\nit does not.\n\n## Should I use this library instead of something else?\n\nAlmost certainly no,\nyou should use something else\ninstead of this library.\n\n## What does this library offer?\n\nIt is fully supported by unit tests,\nis small of interface and implementation,\nand works in both node.js\nand the browser.\n\nFurthermore,\nit behaves exactly how I want,\nwhich is quite important\nwhen you're me.\n\n## What size is it?\n\n2.6 kb unminified with comments, 0.7 kb minified, 0.4 kb minified + gzipped\n\n## How do I install it?\n\nAny of the following will do:\n\n```\nnpm install get-off-my-log\n\njam install get-off-my-log\n\nbower install get-off-my-log\n\ncomponent install philbooth/get-off-my-log\n\ngit clone git@github.com:philbooth/get-off-my-log.git\n```\n\n## How do I use it?\n\n### Loading the library\n\nIf you are running in\nNode.js,\n[Browserify]\nor another CommonJS-style\nenvironment,\nyou can `require`\nget-off-my-log like so:\n\n```javascript\nvar log = require('get-off-my-log');\n```\n\nIt also the supports\nthe AMD-style format\npreferred by [Require.js][require]:\n\n```javascript\nrequire.config({\n    paths: {\n        log: 'get-off-my-log/src'\n    }\n});\n\nrequire([ 'log' ], function (log) {\n});\n```\n\nIf you are\nincluding get-off-my-log\nwith an HTML `<script>` tag,\nor neither of the above environments\nare detected,\nget-off-my-log will just export its interface globally\nas `log`.\n\n### Calling the exported functions\n\nBefore logging any data,\nyou must initialise the library\nwith an `origin` string,\nusing the `initialise` function:\n\n```javascript\nvar fooLog = log.initialise('foo');\n```\n\nThe benefit of this step\nis that it enables\nstraightforward searching and filtering\nof log files\nif you are running a project\nwhere you wish to differentiate\nbetween the origins of different log messages:\n\n```javascript\nvar userLog, systemLog;\n\nuserLog = log.initialise('user');\nsystemLog = log.initialise('system');\n```\n\nThere is also a second, optional argument to `initialise`,\nthe `logger` function.\nIf it is undefined,\nit defaults to `console.log`.\nHowever, if you would like to, say,\nlog messages to a file\nrather than the console,\nproviding a custom logger\nenables you to do that:\n\n```javascript\nvar userLog, systemLog;\n\nuserLog = log.initialise('user', userLogger);\nsystemLog = log.initialise('system', systemLogger);\n\nfunction userLogger (message) {\n    fs.writeFileSync(logs.user, message + '\\n');\n}\n\nfunction systemLogger (message) {\n    fs.writeFileSync(logs.system, message + '\\n');\n}\n```\n\nRegardless of how\nyou choose to initialise your logger(s),\neach one is returned from `initialise`\nas an object with three methods:\n`info`, `warn` and `error`.\n\nEach of these methods\ntakes one argument,\nthe message that you want to log.\nThe message will be sent to the appropriate `logger` function\n(or `console.log` if you used the default),\nprefixed with a timestamp,\nthe log level of the method\n(either `INFO`, `WARN` or `ERROR`),\nand the origin\nthat you set in the call to `initialise`.\n\n### Examples\n\n```javascript\nvar resizeLog, isFired, isDrawing;\n\n// Initialise the window resize logger\nresizeLog = log.initialise('resize');\n\nisFired = isDrawing = false;\n\nwindow.addEventListener('resize', throttleResize, false);\n\nfunction throttleResize () {\n    if (isDrawing === false) {\n        isFired = true;\n        draw();\n    } else {\n        // Write warning-level message to the console\n        resizeLog.warn('already drawing');\n    }\n}\n\nfunction draw () {\n    if (isFired === true) {\n        isFired = false;\n        isDrawing = true;\n\n        // Write info-level message to the console\n        resizeLog.info('started drawing');\n\n        // Draw...\n\n        requestAnimationFrame(draw);\n    } else {\n        isDrawing = false;\n\n        // Write info-level message to the console\n        resizeLog.info('stopped drawing');\n    }\n}\n```\n\n```javascript\nvar log, databaseLog;\n\nlog = require('get-off-my-log');\n\n// Initialise the database logger\ndatabaseLog = log.initialise('database', databaseLogger);\n\nfunction databaseLogger (message) {\n    fs.writeFileSync('/var/log/foo/database.log', message);\n}\n\nfunction update (query, data) {\n    // Write info-level message to database log file\n    databaseLog.info('updating ' + query + ' with ' + data);\n\n    // Update datbase...\n\n    if (error) {\n        // Write error-level message to database log file\n        databaseLog.error(error.message);\n    }\n}\n```\n\n## How do I set up the build environment?\n\nThe build environment relies on\n[Node.js][node],\n[JSHint],\n[Mocha],\n[Chai] and\n[UglifyJS].\nAssuming that you already have Node.js and NPM set up,\nyou just need to run `npm install` to\ninstall all of the dependencies as listed in `package.json`.\n\nThe unit tests are in `test/index.js`.\nYou can run them with the command `npm test`.\nTo run the tests in a web browser,\nopen `test/index.html`.\n\n## What license is it released under?\n\n[MIT][license]\n\n[ci-image]: https://secure.travis-ci.org/philbooth/get-off-my-log.png?branch=master\n[ci-status]: http://travis-ci.org/#!/philbooth/get-off-my-log\n[node]: http://nodejs.org/\n[browserify]: http://browserify.org/\n[require]: http://requirejs.org/\n[jshint]: https://github.com/jshint/node-jshint\n[mocha]: http://visionmedia.github.com/mocha\n[chai]: http://chaijs.com/\n[uglifyjs]: https://github.com/mishoo/UglifyJS\n[license]: https://github.com/philbooth/get-off-my-log/blob/master/COPYING\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/philbooth/get-off-my-log.git"
  },
  "scripts": {
    "lint": "./node_modules/.bin/jshint src/index.js --config .jshintrc",
    "minify": "./node_modules/.bin/uglifyjs src/index.js --compress --mangle --output src/min.js",
    "test": "./node_modules/.bin/mocha --ui tdd --reporter spec --colors test/index.js"
  },
  "version": "0.1.0"
}
